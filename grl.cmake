# Specify grl modules a target depends on
macro(grl_link_libraries target)
  set(${target}_target ${TARGET}) 
  set(TARGET ${target})
  foreach(_dep ${ARGN})
    if (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${_dep}/include")
      include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${_dep}/include)
    endif()
    include(${CMAKE_CURRENT_SOURCE_DIR}/${_dep}/link.cmake)
  endforeach()
  set(TARGET ${${target}_target})
endmacro(grl_link_libraries)

# Build a target
macro(grl_build_library target)
  set(SRC ${CMAKE_CURRENT_SOURCE_DIR}/${target}/src)
  if (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${target}/cmake")
    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/${target}/cmake)
  endif()
  if (EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${target}/include")
    include_directories(${CMAKE_CURRENT_SOURCE_DIR}/${target}/include)
  endif()
  include(${CMAKE_CURRENT_SOURCE_DIR}/${target}/build.cmake)
endmacro(grl_build_library)

# Link to correct YAML
macro(grl_link_yaml target)
  if (DEFINED GRL_YAML_MODULE)
    grl_link_libraries(${target} externals/yaml-cpp)
  else()
    target_link_libraries(${target} -lyaml-cpp)
  endif()
endmacro(grl_link_yaml)
