#!/usr/bin/python

import yaml
import os, inspect, sys
from grllib import *

binpath = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))

# Load object parameter requests, generated by requestgen
stream = file(binpath + '/requests.yaml', 'r')
requests = yaml.load(stream, OrderedDictYAMLLoader)

if len(sys.argv) > 1:
  str = sys.argv[1]
else:
  str = ""

matches = findrequests(requests, str)
if len(matches) > 1:
  mjust = 0
  for m in matches:
    mjust = max(mjust, len(m))
  for m in matches:
    print m.ljust(mjust+2) + requests[m]["description"]
elif len(matches) == 0:
  print sys.argv[1] + " not found"
else:
  req = requests[matches[0]]
  if req:
    print req["description"]
    pjust = 0
    tjust = 0
    for p in req:
      if p != "description":
        pjust = max(pjust, len(p))
        tjust = max(tjust, len(req[p]["type"]))
    for p in req:
      if p != "description":
        print p.ljust(pjust+2) + req[p]["type"].ljust(tjust+2) + req[p]["description"]
